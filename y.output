Terminals unused in grammar

   BREAK
   CASE
   CONST
   SWITCH
   DEFAULT
   DOT
   COLON


State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: Cprogram

    2 Cprogram: code
    3         | Cprogram code

    4 code: function
    5     | decl

    6 function: type ID LB plist RB body
    7         | type ID LB RB body
    8         | type ID LB plist RB SEMI
    9         | type ID LB RB SEMI

   10 decl: type ID SEMI
   11     | type assexp SEMI

   12 plist: pdecl
   13      | plist COMMA pdecl

   14 pdecl: type ID

   15 body: LBB RBB
   16     | LBB codelist RBB

   17 codelist: codeitem
   18         | codelist M codeitem

   19 codeitem: decl
   20         | stat
   21         | RETURN ariexplist SEMI
   22         | RETURN conexplist SEMI

   23 stat: body
   24     | expstat
   25     | selstat
   26     | iterstat

   27 expstat: SEMI
   28        | exp SEMI

   29 selstat: IF LB exp RB M stat ELSE N M stat
   30        | IF LB exp RB M stat

   31 iterstat: WHILE LB M exp RB M stat
   32         | FOR LB decl expstat exp RB stat

   33 exp: conexplist
   34    | assexp
   35    | ariexplist

   36 assexp: ID NM assop exp

   37 NM: /* empty */

   38 ariexplist: ariexplist ariop ariexp
   39           | ariexplist ariop LB ariexplist RB
   40           | ariexp
   41           | LB ariexplist RB

   42 ariexp: value
   43       | ADD useID
   44       | MINUS useID
   45       | useID
   46       | ID LB RB
   47       | ID LB vlist RB

   48 vlist: value
   49      | value COMMA value

   50 value: CONSTANTNUM
   51      | ADD CONSTANTNUM
   52      | MINUS CONSTANTNUM

   53 useID: ID

   54 conexplist: conexp
   55           | conexp logop M conexp

   56 conexp: ariexp relop ariexp

   57 M: /* empty */

   58 N: /* empty */

   59 ariop: ADD
   60      | MINUS
   61      | TIMES
   62      | DIVIDE

   63 logop: DAND
   64      | DOR

   65 relop: EQUAL
   66      | LESS
   67      | GREATER
   68      | NOTEQUAL
   69      | LESSEQUAL
   70      | GREATEREQUAL

   71 assop: ASSIGN

   72 type: VOID
   73     | INT
   74     | FLOAT
   75     | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 8 9 10 14 36 46 47 53
INT (259) 73
BREAK (260)
CASE (261)
DOUBLE (262) 75
CONST (263)
FLOAT (264) 74
VOID (265) 72
RETURN (266) 21 22
FOR (267) 32
WHILE (268) 31
ELSE (269) 29
IF (270) 29 30
SWITCH (271)
DEFAULT (272)
LB (273) 6 7 8 9 29 30 31 32 39 41 46 47
RB (274) 6 7 8 9 29 30 31 32 39 41 46 47
LBB (275) 15 16
RBB (276) 15 16
DOT (277)
SEMI (278) 8 9 10 11 21 22 27 28
COLON (279)
COMMA (280) 13 49
CONSTANTNUM (281) 50 51 52
ASSIGN (282) 71
DOR (283) 64
DAND (284) 63
EQUAL (285) 65
NOTEQUAL (286) 68
LESSEQUAL (287) 69
GREATEREQUAL (288) 70
LESS (289) 66
GREATER (290) 67
MINUS (291) 44 52 60
ADD (292) 43 51 59
DIVIDE (293) 62
TIMES (294) 61


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
START (41)
    on left: 1, on right: 0
Cprogram (42)
    on left: 2 3, on right: 1 3
code (43)
    on left: 4 5, on right: 2 3
function (44)
    on left: 6 7 8 9, on right: 4
decl (45)
    on left: 10 11, on right: 5 19 32
plist (46)
    on left: 12 13, on right: 6 8 13
pdecl (47)
    on left: 14, on right: 12 13
body (48)
    on left: 15 16, on right: 6 7 23
codelist (49)
    on left: 17 18, on right: 16 18
codeitem (50)
    on left: 19 20 21 22, on right: 17 18
stat (51)
    on left: 23 24 25 26, on right: 20 29 30 31 32
expstat (52)
    on left: 27 28, on right: 24 32
selstat (53)
    on left: 29 30, on right: 25
iterstat (54)
    on left: 31 32, on right: 26
exp (55)
    on left: 33 34 35, on right: 28 29 30 31 32 36
assexp (56)
    on left: 36, on right: 11 34
NM (57)
    on left: 37, on right: 36
ariexplist (58)
    on left: 38 39 40 41, on right: 21 35 38 39 41
ariexp (59)
    on left: 42 43 44 45 46 47, on right: 38 40 56
vlist (60)
    on left: 48 49, on right: 47
value (61)
    on left: 50 51 52, on right: 42 48 49
useID (62)
    on left: 53, on right: 43 44 45
conexplist (63)
    on left: 54 55, on right: 22 33
conexp (64)
    on left: 56, on right: 54 55
M (65)
    on left: 57, on right: 18 29 30 31 55
N (66)
    on left: 58, on right: 29
ariop (67)
    on left: 59 60 61 62, on right: 38 39
logop (68)
    on left: 63 64, on right: 55
relop (69)
    on left: 65 66 67 68 69 70, on right: 56
assop (70)
    on left: 71, on right: 36
type (71)
    on left: 72 73 74 75, on right: 6 7 8 9 10 11 14


state 0

    0 $accept: . START $end

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    START     go to state 5
    Cprogram  go to state 6
    code      go to state 7
    function  go to state 8
    decl      go to state 9
    type      go to state 10


state 1

   73 type: INT .

    $default  reduce using rule 73 (type)


state 2

   75 type: DOUBLE .

    $default  reduce using rule 75 (type)


state 3

   74 type: FLOAT .

    $default  reduce using rule 74 (type)


state 4

   72 type: VOID .

    $default  reduce using rule 72 (type)


state 5

    0 $accept: START . $end

    $end  shift, and go to state 11


state 6

    1 START: Cprogram .
    3 Cprogram: Cprogram . code

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 1 (START)

    code      go to state 12
    function  go to state 8
    decl      go to state 9
    type      go to state 10


state 7

    2 Cprogram: code .

    $default  reduce using rule 2 (Cprogram)


state 8

    4 code: function .

    $default  reduce using rule 4 (code)


state 9

    5 code: decl .

    $default  reduce using rule 5 (code)


state 10

    6 function: type . ID LB plist RB body
    7         | type . ID LB RB body
    8         | type . ID LB plist RB SEMI
    9         | type . ID LB RB SEMI
   10 decl: type . ID SEMI
   11     | type . assexp SEMI

    ID  shift, and go to state 13

    assexp  go to state 14


state 11

    0 $accept: START $end .

    $default  accept


state 12

    3 Cprogram: Cprogram code .

    $default  reduce using rule 3 (Cprogram)


state 13

    6 function: type ID . LB plist RB body
    7         | type ID . LB RB body
    8         | type ID . LB plist RB SEMI
    9         | type ID . LB RB SEMI
   10 decl: type ID . SEMI
   36 assexp: ID . NM assop exp

    LB    shift, and go to state 15
    SEMI  shift, and go to state 16

    $default  reduce using rule 37 (NM)

    NM  go to state 17


state 14

   11 decl: type assexp . SEMI

    SEMI  shift, and go to state 18


state 15

    6 function: type ID LB . plist RB body
    7         | type ID LB . RB body
    8         | type ID LB . plist RB SEMI
    9         | type ID LB . RB SEMI

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    RB      shift, and go to state 19

    plist  go to state 20
    pdecl  go to state 21
    type   go to state 22


state 16

   10 decl: type ID SEMI .

    $default  reduce using rule 10 (decl)


state 17

   36 assexp: ID NM . assop exp

    ASSIGN  shift, and go to state 23

    assop  go to state 24


state 18

   11 decl: type assexp SEMI .

    $default  reduce using rule 11 (decl)


state 19

    7 function: type ID LB RB . body
    9         | type ID LB RB . SEMI

    LBB   shift, and go to state 25
    SEMI  shift, and go to state 26

    body  go to state 27


state 20

    6 function: type ID LB plist . RB body
    8         | type ID LB plist . RB SEMI
   13 plist: plist . COMMA pdecl

    RB     shift, and go to state 28
    COMMA  shift, and go to state 29


state 21

   12 plist: pdecl .

    $default  reduce using rule 12 (plist)


state 22

   14 pdecl: type . ID

    ID  shift, and go to state 30


state 23

   71 assop: ASSIGN .

    $default  reduce using rule 71 (assop)


state 24

   36 assexp: ID NM assop . exp

    ID           shift, and go to state 31
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    exp         go to state 36
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 25

   15 body: LBB . RBB
   16     | LBB . codelist RBB

    ID           shift, and go to state 31
    INT          shift, and go to state 1
    DOUBLE       shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    IF           shift, and go to state 47
    LB           shift, and go to state 32
    LBB          shift, and go to state 25
    RBB          shift, and go to state 48
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    decl        go to state 50
    body        go to state 51
    codelist    go to state 52
    codeitem    go to state 53
    stat        go to state 54
    expstat     go to state 55
    selstat     go to state 56
    iterstat    go to state 57
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43
    type        go to state 59


state 26

    9 function: type ID LB RB SEMI .

    $default  reduce using rule 9 (function)


state 27

    7 function: type ID LB RB body .

    $default  reduce using rule 7 (function)


state 28

    6 function: type ID LB plist RB . body
    8         | type ID LB plist RB . SEMI

    LBB   shift, and go to state 25
    SEMI  shift, and go to state 60

    body  go to state 61


state 29

   13 plist: plist COMMA . pdecl

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    pdecl  go to state 62
    type   go to state 22


state 30

   14 pdecl: type ID .

    $default  reduce using rule 14 (pdecl)


state 31

   36 assexp: ID . NM assop exp
   46 ariexp: ID . LB RB
   47       | ID . LB vlist RB
   53 useID: ID .

    LB  shift, and go to state 63

    ASSIGN    reduce using rule 37 (NM)
    $default  reduce using rule 53 (useID)

    NM  go to state 17


state 32

   41 ariexplist: LB . ariexplist RB

    ID           shift, and go to state 64
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    ariexplist  go to state 65
    ariexp      go to state 66
    value       go to state 40
    useID       go to state 41


state 33

   50 value: CONSTANTNUM .

    $default  reduce using rule 50 (value)


state 34

   44 ariexp: MINUS . useID
   52 value: MINUS . CONSTANTNUM

    ID           shift, and go to state 67
    CONSTANTNUM  shift, and go to state 68

    useID  go to state 69


state 35

   43 ariexp: ADD . useID
   51 value: ADD . CONSTANTNUM

    ID           shift, and go to state 67
    CONSTANTNUM  shift, and go to state 70

    useID  go to state 71


state 36

   36 assexp: ID NM assop exp .

    $default  reduce using rule 36 (assexp)


state 37

   34 exp: assexp .

    $default  reduce using rule 34 (exp)


state 38

   35 exp: ariexplist .
   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB

    MINUS   shift, and go to state 72
    ADD     shift, and go to state 73
    DIVIDE  shift, and go to state 74
    TIMES   shift, and go to state 75

    $default  reduce using rule 35 (exp)

    ariop  go to state 76


state 39

   40 ariexplist: ariexp .
   56 conexp: ariexp . relop ariexp

    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    LESSEQUAL     shift, and go to state 79
    GREATEREQUAL  shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82

    $default  reduce using rule 40 (ariexplist)

    relop  go to state 83


state 40

   42 ariexp: value .

    $default  reduce using rule 42 (ariexp)


state 41

   45 ariexp: useID .

    $default  reduce using rule 45 (ariexp)


state 42

   33 exp: conexplist .

    $default  reduce using rule 33 (exp)


state 43

   54 conexplist: conexp .
   55           | conexp . logop M conexp

    DOR   shift, and go to state 84
    DAND  shift, and go to state 85

    $default  reduce using rule 54 (conexplist)

    logop  go to state 86


state 44

   21 codeitem: RETURN . ariexplist SEMI
   22         | RETURN . conexplist SEMI

    ID           shift, and go to state 64
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    ariexplist  go to state 87
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 88
    conexp      go to state 43


state 45

   32 iterstat: FOR . LB decl expstat exp RB stat

    LB  shift, and go to state 89


state 46

   31 iterstat: WHILE . LB M exp RB M stat

    LB  shift, and go to state 90


state 47

   29 selstat: IF . LB exp RB M stat ELSE N M stat
   30        | IF . LB exp RB M stat

    LB  shift, and go to state 91


state 48

   15 body: LBB RBB .

    $default  reduce using rule 15 (body)


state 49

   27 expstat: SEMI .

    $default  reduce using rule 27 (expstat)


state 50

   19 codeitem: decl .

    $default  reduce using rule 19 (codeitem)


state 51

   23 stat: body .

    $default  reduce using rule 23 (stat)


state 52

   16 body: LBB codelist . RBB
   18 codelist: codelist . M codeitem

    RBB  shift, and go to state 92

    $default  reduce using rule 57 (M)

    M  go to state 93


state 53

   17 codelist: codeitem .

    $default  reduce using rule 17 (codelist)


state 54

   20 codeitem: stat .

    $default  reduce using rule 20 (codeitem)


state 55

   24 stat: expstat .

    $default  reduce using rule 24 (stat)


state 56

   25 stat: selstat .

    $default  reduce using rule 25 (stat)


state 57

   26 stat: iterstat .

    $default  reduce using rule 26 (stat)


state 58

   28 expstat: exp . SEMI

    SEMI  shift, and go to state 94


state 59

   10 decl: type . ID SEMI
   11     | type . assexp SEMI

    ID  shift, and go to state 95

    assexp  go to state 14


state 60

    8 function: type ID LB plist RB SEMI .

    $default  reduce using rule 8 (function)


state 61

    6 function: type ID LB plist RB body .

    $default  reduce using rule 6 (function)


state 62

   13 plist: plist COMMA pdecl .

    $default  reduce using rule 13 (plist)


state 63

   46 ariexp: ID LB . RB
   47       | ID LB . vlist RB

    RB           shift, and go to state 96
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 97
    ADD          shift, and go to state 98

    vlist  go to state 99
    value  go to state 100


state 64

   46 ariexp: ID . LB RB
   47       | ID . LB vlist RB
   53 useID: ID .

    LB  shift, and go to state 63

    $default  reduce using rule 53 (useID)


state 65

   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB
   41           | LB ariexplist . RB

    RB      shift, and go to state 101
    MINUS   shift, and go to state 72
    ADD     shift, and go to state 73
    DIVIDE  shift, and go to state 74
    TIMES   shift, and go to state 75

    ariop  go to state 76


state 66

   40 ariexplist: ariexp .

    $default  reduce using rule 40 (ariexplist)


state 67

   53 useID: ID .

    $default  reduce using rule 53 (useID)


state 68

   52 value: MINUS CONSTANTNUM .

    $default  reduce using rule 52 (value)


state 69

   44 ariexp: MINUS useID .

    $default  reduce using rule 44 (ariexp)


state 70

   51 value: ADD CONSTANTNUM .

    $default  reduce using rule 51 (value)


state 71

   43 ariexp: ADD useID .

    $default  reduce using rule 43 (ariexp)


state 72

   60 ariop: MINUS .

    $default  reduce using rule 60 (ariop)


state 73

   59 ariop: ADD .

    $default  reduce using rule 59 (ariop)


state 74

   62 ariop: DIVIDE .

    $default  reduce using rule 62 (ariop)


state 75

   61 ariop: TIMES .

    $default  reduce using rule 61 (ariop)


state 76

   38 ariexplist: ariexplist ariop . ariexp
   39           | ariexplist ariop . LB ariexplist RB

    ID           shift, and go to state 64
    LB           shift, and go to state 102
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    ariexp  go to state 103
    value   go to state 40
    useID   go to state 41


state 77

   65 relop: EQUAL .

    $default  reduce using rule 65 (relop)


state 78

   68 relop: NOTEQUAL .

    $default  reduce using rule 68 (relop)


state 79

   69 relop: LESSEQUAL .

    $default  reduce using rule 69 (relop)


state 80

   70 relop: GREATEREQUAL .

    $default  reduce using rule 70 (relop)


state 81

   66 relop: LESS .

    $default  reduce using rule 66 (relop)


state 82

   67 relop: GREATER .

    $default  reduce using rule 67 (relop)


state 83

   56 conexp: ariexp relop . ariexp

    ID           shift, and go to state 64
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    ariexp  go to state 104
    value   go to state 40
    useID   go to state 41


state 84

   64 logop: DOR .

    $default  reduce using rule 64 (logop)


state 85

   63 logop: DAND .

    $default  reduce using rule 63 (logop)


state 86

   55 conexplist: conexp logop . M conexp

    $default  reduce using rule 57 (M)

    M  go to state 105


state 87

   21 codeitem: RETURN ariexplist . SEMI
   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB

    SEMI    shift, and go to state 106
    MINUS   shift, and go to state 72
    ADD     shift, and go to state 73
    DIVIDE  shift, and go to state 74
    TIMES   shift, and go to state 75

    ariop  go to state 76


state 88

   22 codeitem: RETURN conexplist . SEMI

    SEMI  shift, and go to state 107


state 89

   32 iterstat: FOR LB . decl expstat exp RB stat

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    decl  go to state 108
    type  go to state 59


state 90

   31 iterstat: WHILE LB . M exp RB M stat

    $default  reduce using rule 57 (M)

    M  go to state 109


state 91

   29 selstat: IF LB . exp RB M stat ELSE N M stat
   30        | IF LB . exp RB M stat

    ID           shift, and go to state 31
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    exp         go to state 110
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 92

   16 body: LBB codelist RBB .

    $default  reduce using rule 16 (body)


state 93

   18 codelist: codelist M . codeitem

    ID           shift, and go to state 31
    INT          shift, and go to state 1
    DOUBLE       shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 44
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    IF           shift, and go to state 47
    LB           shift, and go to state 32
    LBB          shift, and go to state 25
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    decl        go to state 50
    body        go to state 51
    codeitem    go to state 111
    stat        go to state 54
    expstat     go to state 55
    selstat     go to state 56
    iterstat    go to state 57
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43
    type        go to state 59


state 94

   28 expstat: exp SEMI .

    $default  reduce using rule 28 (expstat)


state 95

   10 decl: type ID . SEMI
   36 assexp: ID . NM assop exp

    SEMI  shift, and go to state 16

    $default  reduce using rule 37 (NM)

    NM  go to state 17


state 96

   46 ariexp: ID LB RB .

    $default  reduce using rule 46 (ariexp)


state 97

   52 value: MINUS . CONSTANTNUM

    CONSTANTNUM  shift, and go to state 68


state 98

   51 value: ADD . CONSTANTNUM

    CONSTANTNUM  shift, and go to state 70


state 99

   47 ariexp: ID LB vlist . RB

    RB  shift, and go to state 112


state 100

   48 vlist: value .
   49      | value . COMMA value

    COMMA  shift, and go to state 113

    $default  reduce using rule 48 (vlist)


state 101

   41 ariexplist: LB ariexplist RB .

    $default  reduce using rule 41 (ariexplist)


state 102

   39 ariexplist: ariexplist ariop LB . ariexplist RB

    ID           shift, and go to state 64
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    ariexplist  go to state 114
    ariexp      go to state 66
    value       go to state 40
    useID       go to state 41


state 103

   38 ariexplist: ariexplist ariop ariexp .

    $default  reduce using rule 38 (ariexplist)


state 104

   56 conexp: ariexp relop ariexp .

    $default  reduce using rule 56 (conexp)


state 105

   55 conexplist: conexp logop M . conexp

    ID           shift, and go to state 64
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    ariexp  go to state 115
    value   go to state 40
    useID   go to state 41
    conexp  go to state 116


state 106

   21 codeitem: RETURN ariexplist SEMI .

    $default  reduce using rule 21 (codeitem)


state 107

   22 codeitem: RETURN conexplist SEMI .

    $default  reduce using rule 22 (codeitem)


state 108

   32 iterstat: FOR LB decl . expstat exp RB stat

    ID           shift, and go to state 31
    LB           shift, and go to state 32
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    expstat     go to state 117
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 109

   31 iterstat: WHILE LB M . exp RB M stat

    ID           shift, and go to state 31
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    exp         go to state 118
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 110

   29 selstat: IF LB exp . RB M stat ELSE N M stat
   30        | IF LB exp . RB M stat

    RB  shift, and go to state 119


state 111

   18 codelist: codelist M codeitem .

    $default  reduce using rule 18 (codelist)


state 112

   47 ariexp: ID LB vlist RB .

    $default  reduce using rule 47 (ariexp)


state 113

   49 vlist: value COMMA . value

    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 97
    ADD          shift, and go to state 98

    value  go to state 120


state 114

   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB
   39           | ariexplist ariop LB ariexplist . RB

    RB      shift, and go to state 121
    MINUS   shift, and go to state 72
    ADD     shift, and go to state 73
    DIVIDE  shift, and go to state 74
    TIMES   shift, and go to state 75

    ariop  go to state 76


state 115

   56 conexp: ariexp . relop ariexp

    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    LESSEQUAL     shift, and go to state 79
    GREATEREQUAL  shift, and go to state 80
    LESS          shift, and go to state 81
    GREATER       shift, and go to state 82

    relop  go to state 83


state 116

   55 conexplist: conexp logop M conexp .

    $default  reduce using rule 55 (conexplist)


state 117

   32 iterstat: FOR LB decl expstat . exp RB stat

    ID           shift, and go to state 31
    LB           shift, and go to state 32
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    exp         go to state 122
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 118

   31 iterstat: WHILE LB M exp . RB M stat

    RB  shift, and go to state 123


state 119

   29 selstat: IF LB exp RB . M stat ELSE N M stat
   30        | IF LB exp RB . M stat

    $default  reduce using rule 57 (M)

    M  go to state 124


state 120

   49 vlist: value COMMA value .

    $default  reduce using rule 49 (vlist)


state 121

   39 ariexplist: ariexplist ariop LB ariexplist RB .

    $default  reduce using rule 39 (ariexplist)


state 122

   32 iterstat: FOR LB decl expstat exp . RB stat

    RB  shift, and go to state 125


state 123

   31 iterstat: WHILE LB M exp RB . M stat

    $default  reduce using rule 57 (M)

    M  go to state 126


state 124

   29 selstat: IF LB exp RB M . stat ELSE N M stat
   30        | IF LB exp RB M . stat

    ID           shift, and go to state 31
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    IF           shift, and go to state 47
    LB           shift, and go to state 32
    LBB          shift, and go to state 25
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    body        go to state 51
    stat        go to state 127
    expstat     go to state 55
    selstat     go to state 56
    iterstat    go to state 57
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 125

   32 iterstat: FOR LB decl expstat exp RB . stat

    ID           shift, and go to state 31
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    IF           shift, and go to state 47
    LB           shift, and go to state 32
    LBB          shift, and go to state 25
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    body        go to state 51
    stat        go to state 128
    expstat     go to state 55
    selstat     go to state 56
    iterstat    go to state 57
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 126

   31 iterstat: WHILE LB M exp RB M . stat

    ID           shift, and go to state 31
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    IF           shift, and go to state 47
    LB           shift, and go to state 32
    LBB          shift, and go to state 25
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    body        go to state 51
    stat        go to state 129
    expstat     go to state 55
    selstat     go to state 56
    iterstat    go to state 57
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 127

   29 selstat: IF LB exp RB M stat . ELSE N M stat
   30        | IF LB exp RB M stat .

    ELSE  shift, and go to state 130

    ELSE      [reduce using rule 30 (selstat)]
    $default  reduce using rule 30 (selstat)


state 128

   32 iterstat: FOR LB decl expstat exp RB stat .

    $default  reduce using rule 32 (iterstat)


state 129

   31 iterstat: WHILE LB M exp RB M stat .

    $default  reduce using rule 31 (iterstat)


state 130

   29 selstat: IF LB exp RB M stat ELSE . N M stat

    $default  reduce using rule 58 (N)

    N  go to state 131


state 131

   29 selstat: IF LB exp RB M stat ELSE N . M stat

    $default  reduce using rule 57 (M)

    M  go to state 132


state 132

   29 selstat: IF LB exp RB M stat ELSE N M . stat

    ID           shift, and go to state 31
    FOR          shift, and go to state 45
    WHILE        shift, and go to state 46
    IF           shift, and go to state 47
    LB           shift, and go to state 32
    LBB          shift, and go to state 25
    SEMI         shift, and go to state 49
    CONSTANTNUM  shift, and go to state 33
    MINUS        shift, and go to state 34
    ADD          shift, and go to state 35

    body        go to state 51
    stat        go to state 133
    expstat     go to state 55
    selstat     go to state 56
    iterstat    go to state 57
    exp         go to state 58
    assexp      go to state 37
    ariexplist  go to state 38
    ariexp      go to state 39
    value       go to state 40
    useID       go to state 41
    conexplist  go to state 42
    conexp      go to state 43


state 133

   29 selstat: IF LB exp RB M stat ELSE N M stat .

    $default  reduce using rule 29 (selstat)
