Terminals unused in grammar

   BREAK
   CASE
   CONST
   SWITCH
   DEFAULT
   DOT
   COLON


State 121 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: Cprogram

    2 Cprogram: code
    3         | Cprogram code

    4 code: function
    5     | decl

    6 function: type ID LB plist RB body
    7         | type ID LB RB body
    8         | type ID LB plist RB SEMI
    9         | type ID LB RB SEMI

   10 decl: type ID SEMI
   11     | type assexp SEMI

   12 plist: pdecl
   13      | plist COMMA pdecl

   14 pdecl: type ID

   15 body: LBB RBB
   16     | LBB codelist RBB

   17 codelist: codeitem
   18         | codelist codeitem

   19 codeitem: decl
   20         | stat
   21         | RETURN ariexplist SEMI
   22         | RETURN conexplist SEMI

   23 stat: body
   24     | expstat
   25     | selstat
   26     | iterstat

   27 expstat: SEMI
   28        | exp SEMI

   29 selstat: IF LB exp RB stat ELSE stat
   30        | IF LB exp RB stat

   31 iterstat: WHILE LB exp RB stat
   32         | FOR LB decl expstat exp RB stat

   33 exp: conexplist
   34    | assexp
   35    | ariexplist

   36 assexp: ID assop exp

   37 ariexplist: ariexplist ariop ariexp
   38           | ariexplist ariop LB ariexplist RB
   39           | ariexp
   40           | LB ariexplist RB

   41 ariexp: value
   42       | ADD ID
   43       | MINUS ID
   44       | ID LB RB
   45       | ID LB vlist RB

   46 vlist: value
   47      | value COMMA value

   48 value: CONSTANTNUM
   49      | ADD CONSTANTNUM
   50      | MINUS CONSTANTNUM
   51      | ID

   52 conexplist: conexp
   53           | conexp logop M conexp

   54 conexp: ariexp relop ariexp

   55 M: /* empty */

   56 ariop: ADD
   57      | MINUS
   58      | TIMES
   59      | DIVIDE

   60 logop: DAND
   61      | DOR

   62 relop: EQUAL
   63      | LESS
   64      | GREATER
   65      | NOTEQUAL
   66      | LESSEQUAL
   67      | GREATEREQUAL

   68 assop: ASSIGN

   69 type: VOID
   70     | INT
   71     | FLOAT
   72     | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 8 9 10 14 36 42 43 44 45 51
INT (259) 70
BREAK (260)
CASE (261)
DOUBLE (262) 72
CONST (263)
FLOAT (264) 71
VOID (265) 69
RETURN (266) 21 22
FOR (267) 32
WHILE (268) 31
ELSE (269) 29
IF (270) 29 30
SWITCH (271)
DEFAULT (272)
LB (273) 6 7 8 9 29 30 31 32 38 40 44 45
RB (274) 6 7 8 9 29 30 31 32 38 40 44 45
LBB (275) 15 16
RBB (276) 15 16
DOT (277)
SEMI (278) 8 9 10 11 21 22 27 28
COLON (279)
COMMA (280) 13 47
CONSTANTNUM (281) 48 49 50
ASSIGN (282) 68
DOR (283) 61
DAND (284) 60
EQUAL (285) 62
NOTEQUAL (286) 65
LESSEQUAL (287) 66
GREATEREQUAL (288) 67
LESS (289) 63
GREATER (290) 64
MINUS (291) 43 50 57
ADD (292) 42 49 56
DIVIDE (293) 59
TIMES (294) 58


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
START (41)
    on left: 1, on right: 0
Cprogram (42)
    on left: 2 3, on right: 1 3
code (43)
    on left: 4 5, on right: 2 3
function (44)
    on left: 6 7 8 9, on right: 4
decl (45)
    on left: 10 11, on right: 5 19 32
plist (46)
    on left: 12 13, on right: 6 8 13
pdecl (47)
    on left: 14, on right: 12 13
body (48)
    on left: 15 16, on right: 6 7 23
codelist (49)
    on left: 17 18, on right: 16 18
codeitem (50)
    on left: 19 20 21 22, on right: 17 18
stat (51)
    on left: 23 24 25 26, on right: 20 29 30 31 32
expstat (52)
    on left: 27 28, on right: 24 32
selstat (53)
    on left: 29 30, on right: 25
iterstat (54)
    on left: 31 32, on right: 26
exp (55)
    on left: 33 34 35, on right: 28 29 30 31 32 36
assexp (56)
    on left: 36, on right: 11 34
ariexplist (57)
    on left: 37 38 39 40, on right: 21 35 37 38 40
ariexp (58)
    on left: 41 42 43 44 45, on right: 37 39 54
vlist (59)
    on left: 46 47, on right: 45
value (60)
    on left: 48 49 50 51, on right: 41 46 47
conexplist (61)
    on left: 52 53, on right: 22 33
conexp (62)
    on left: 54, on right: 52 53
M (63)
    on left: 55, on right: 53
ariop (64)
    on left: 56 57 58 59, on right: 37 38
logop (65)
    on left: 60 61, on right: 53
relop (66)
    on left: 62 63 64 65 66 67, on right: 54
assop (67)
    on left: 68, on right: 36
type (68)
    on left: 69 70 71 72, on right: 6 7 8 9 10 11 14


state 0

    0 $accept: . START $end

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    START     go to state 5
    Cprogram  go to state 6
    code      go to state 7
    function  go to state 8
    decl      go to state 9
    type      go to state 10


state 1

   70 type: INT .

    $default  reduce using rule 70 (type)


state 2

   72 type: DOUBLE .

    $default  reduce using rule 72 (type)


state 3

   71 type: FLOAT .

    $default  reduce using rule 71 (type)


state 4

   69 type: VOID .

    $default  reduce using rule 69 (type)


state 5

    0 $accept: START . $end

    $end  shift, and go to state 11


state 6

    1 START: Cprogram .
    3 Cprogram: Cprogram . code

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 1 (START)

    code      go to state 12
    function  go to state 8
    decl      go to state 9
    type      go to state 10


state 7

    2 Cprogram: code .

    $default  reduce using rule 2 (Cprogram)


state 8

    4 code: function .

    $default  reduce using rule 4 (code)


state 9

    5 code: decl .

    $default  reduce using rule 5 (code)


state 10

    6 function: type . ID LB plist RB body
    7         | type . ID LB RB body
    8         | type . ID LB plist RB SEMI
    9         | type . ID LB RB SEMI
   10 decl: type . ID SEMI
   11     | type . assexp SEMI

    ID  shift, and go to state 13

    assexp  go to state 14


state 11

    0 $accept: START $end .

    $default  accept


state 12

    3 Cprogram: Cprogram code .

    $default  reduce using rule 3 (Cprogram)


state 13

    6 function: type ID . LB plist RB body
    7         | type ID . LB RB body
    8         | type ID . LB plist RB SEMI
    9         | type ID . LB RB SEMI
   10 decl: type ID . SEMI
   36 assexp: ID . assop exp

    LB      shift, and go to state 15
    SEMI    shift, and go to state 16
    ASSIGN  shift, and go to state 17

    assop  go to state 18


state 14

   11 decl: type assexp . SEMI

    SEMI  shift, and go to state 19


state 15

    6 function: type ID LB . plist RB body
    7         | type ID LB . RB body
    8         | type ID LB . plist RB SEMI
    9         | type ID LB . RB SEMI

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    RB      shift, and go to state 20

    plist  go to state 21
    pdecl  go to state 22
    type   go to state 23


state 16

   10 decl: type ID SEMI .

    $default  reduce using rule 10 (decl)


state 17

   68 assop: ASSIGN .

    $default  reduce using rule 68 (assop)


state 18

   36 assexp: ID assop . exp

    ID           shift, and go to state 24
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    exp         go to state 29
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 19

   11 decl: type assexp SEMI .

    $default  reduce using rule 11 (decl)


state 20

    7 function: type ID LB RB . body
    9         | type ID LB RB . SEMI

    LBB   shift, and go to state 36
    SEMI  shift, and go to state 37

    body  go to state 38


state 21

    6 function: type ID LB plist . RB body
    8         | type ID LB plist . RB SEMI
   13 plist: plist . COMMA pdecl

    RB     shift, and go to state 39
    COMMA  shift, and go to state 40


state 22

   12 plist: pdecl .

    $default  reduce using rule 12 (plist)


state 23

   14 pdecl: type . ID

    ID  shift, and go to state 41


state 24

   36 assexp: ID . assop exp
   44 ariexp: ID . LB RB
   45       | ID . LB vlist RB
   51 value: ID .

    LB      shift, and go to state 42
    ASSIGN  shift, and go to state 17

    $default  reduce using rule 51 (value)

    assop  go to state 18


state 25

   40 ariexplist: LB . ariexplist RB

    ID           shift, and go to state 43
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    ariexplist  go to state 44
    ariexp      go to state 45
    value       go to state 33


state 26

   48 value: CONSTANTNUM .

    $default  reduce using rule 48 (value)


state 27

   43 ariexp: MINUS . ID
   50 value: MINUS . CONSTANTNUM

    ID           shift, and go to state 46
    CONSTANTNUM  shift, and go to state 47


state 28

   42 ariexp: ADD . ID
   49 value: ADD . CONSTANTNUM

    ID           shift, and go to state 48
    CONSTANTNUM  shift, and go to state 49


state 29

   36 assexp: ID assop exp .

    $default  reduce using rule 36 (assexp)


state 30

   34 exp: assexp .

    $default  reduce using rule 34 (exp)


state 31

   35 exp: ariexplist .
   37 ariexplist: ariexplist . ariop ariexp
   38           | ariexplist . ariop LB ariexplist RB

    MINUS   shift, and go to state 50
    ADD     shift, and go to state 51
    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    $default  reduce using rule 35 (exp)

    ariop  go to state 54


state 32

   39 ariexplist: ariexp .
   54 conexp: ariexp . relop ariexp

    EQUAL         shift, and go to state 55
    NOTEQUAL      shift, and go to state 56
    LESSEQUAL     shift, and go to state 57
    GREATEREQUAL  shift, and go to state 58
    LESS          shift, and go to state 59
    GREATER       shift, and go to state 60

    $default  reduce using rule 39 (ariexplist)

    relop  go to state 61


state 33

   41 ariexp: value .

    $default  reduce using rule 41 (ariexp)


state 34

   33 exp: conexplist .

    $default  reduce using rule 33 (exp)


state 35

   52 conexplist: conexp .
   53           | conexp . logop M conexp

    DOR   shift, and go to state 62
    DAND  shift, and go to state 63

    $default  reduce using rule 52 (conexplist)

    logop  go to state 64


state 36

   15 body: LBB . RBB
   16     | LBB . codelist RBB

    ID           shift, and go to state 24
    INT          shift, and go to state 1
    DOUBLE       shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    IF           shift, and go to state 68
    LB           shift, and go to state 25
    LBB          shift, and go to state 36
    RBB          shift, and go to state 69
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    decl        go to state 71
    body        go to state 72
    codelist    go to state 73
    codeitem    go to state 74
    stat        go to state 75
    expstat     go to state 76
    selstat     go to state 77
    iterstat    go to state 78
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35
    type        go to state 80


state 37

    9 function: type ID LB RB SEMI .

    $default  reduce using rule 9 (function)


state 38

    7 function: type ID LB RB body .

    $default  reduce using rule 7 (function)


state 39

    6 function: type ID LB plist RB . body
    8         | type ID LB plist RB . SEMI

    LBB   shift, and go to state 36
    SEMI  shift, and go to state 81

    body  go to state 82


state 40

   13 plist: plist COMMA . pdecl

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    pdecl  go to state 83
    type   go to state 23


state 41

   14 pdecl: type ID .

    $default  reduce using rule 14 (pdecl)


state 42

   44 ariexp: ID LB . RB
   45       | ID LB . vlist RB

    ID           shift, and go to state 84
    RB           shift, and go to state 85
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 86
    ADD          shift, and go to state 87

    vlist  go to state 88
    value  go to state 89


state 43

   44 ariexp: ID . LB RB
   45       | ID . LB vlist RB
   51 value: ID .

    LB  shift, and go to state 42

    $default  reduce using rule 51 (value)


state 44

   37 ariexplist: ariexplist . ariop ariexp
   38           | ariexplist . ariop LB ariexplist RB
   40           | LB ariexplist . RB

    RB      shift, and go to state 90
    MINUS   shift, and go to state 50
    ADD     shift, and go to state 51
    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    ariop  go to state 54


state 45

   39 ariexplist: ariexp .

    $default  reduce using rule 39 (ariexplist)


state 46

   43 ariexp: MINUS ID .

    $default  reduce using rule 43 (ariexp)


state 47

   50 value: MINUS CONSTANTNUM .

    $default  reduce using rule 50 (value)


state 48

   42 ariexp: ADD ID .

    $default  reduce using rule 42 (ariexp)


state 49

   49 value: ADD CONSTANTNUM .

    $default  reduce using rule 49 (value)


state 50

   57 ariop: MINUS .

    $default  reduce using rule 57 (ariop)


state 51

   56 ariop: ADD .

    $default  reduce using rule 56 (ariop)


state 52

   59 ariop: DIVIDE .

    $default  reduce using rule 59 (ariop)


state 53

   58 ariop: TIMES .

    $default  reduce using rule 58 (ariop)


state 54

   37 ariexplist: ariexplist ariop . ariexp
   38           | ariexplist ariop . LB ariexplist RB

    ID           shift, and go to state 43
    LB           shift, and go to state 91
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    ariexp  go to state 92
    value   go to state 33


state 55

   62 relop: EQUAL .

    $default  reduce using rule 62 (relop)


state 56

   65 relop: NOTEQUAL .

    $default  reduce using rule 65 (relop)


state 57

   66 relop: LESSEQUAL .

    $default  reduce using rule 66 (relop)


state 58

   67 relop: GREATEREQUAL .

    $default  reduce using rule 67 (relop)


state 59

   63 relop: LESS .

    $default  reduce using rule 63 (relop)


state 60

   64 relop: GREATER .

    $default  reduce using rule 64 (relop)


state 61

   54 conexp: ariexp relop . ariexp

    ID           shift, and go to state 43
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    ariexp  go to state 93
    value   go to state 33


state 62

   61 logop: DOR .

    $default  reduce using rule 61 (logop)


state 63

   60 logop: DAND .

    $default  reduce using rule 60 (logop)


state 64

   53 conexplist: conexp logop . M conexp

    $default  reduce using rule 55 (M)

    M  go to state 94


state 65

   21 codeitem: RETURN . ariexplist SEMI
   22         | RETURN . conexplist SEMI

    ID           shift, and go to state 43
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    ariexplist  go to state 95
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 96
    conexp      go to state 35


state 66

   32 iterstat: FOR . LB decl expstat exp RB stat

    LB  shift, and go to state 97


state 67

   31 iterstat: WHILE . LB exp RB stat

    LB  shift, and go to state 98


state 68

   29 selstat: IF . LB exp RB stat ELSE stat
   30        | IF . LB exp RB stat

    LB  shift, and go to state 99


state 69

   15 body: LBB RBB .

    $default  reduce using rule 15 (body)


state 70

   27 expstat: SEMI .

    $default  reduce using rule 27 (expstat)


state 71

   19 codeitem: decl .

    $default  reduce using rule 19 (codeitem)


state 72

   23 stat: body .

    $default  reduce using rule 23 (stat)


state 73

   16 body: LBB codelist . RBB
   18 codelist: codelist . codeitem

    ID           shift, and go to state 24
    INT          shift, and go to state 1
    DOUBLE       shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    IF           shift, and go to state 68
    LB           shift, and go to state 25
    LBB          shift, and go to state 36
    RBB          shift, and go to state 100
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    decl        go to state 71
    body        go to state 72
    codeitem    go to state 101
    stat        go to state 75
    expstat     go to state 76
    selstat     go to state 77
    iterstat    go to state 78
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35
    type        go to state 80


state 74

   17 codelist: codeitem .

    $default  reduce using rule 17 (codelist)


state 75

   20 codeitem: stat .

    $default  reduce using rule 20 (codeitem)


state 76

   24 stat: expstat .

    $default  reduce using rule 24 (stat)


state 77

   25 stat: selstat .

    $default  reduce using rule 25 (stat)


state 78

   26 stat: iterstat .

    $default  reduce using rule 26 (stat)


state 79

   28 expstat: exp . SEMI

    SEMI  shift, and go to state 102


state 80

   10 decl: type . ID SEMI
   11     | type . assexp SEMI

    ID  shift, and go to state 103

    assexp  go to state 14


state 81

    8 function: type ID LB plist RB SEMI .

    $default  reduce using rule 8 (function)


state 82

    6 function: type ID LB plist RB body .

    $default  reduce using rule 6 (function)


state 83

   13 plist: plist COMMA pdecl .

    $default  reduce using rule 13 (plist)


state 84

   51 value: ID .

    $default  reduce using rule 51 (value)


state 85

   44 ariexp: ID LB RB .

    $default  reduce using rule 44 (ariexp)


state 86

   50 value: MINUS . CONSTANTNUM

    CONSTANTNUM  shift, and go to state 47


state 87

   49 value: ADD . CONSTANTNUM

    CONSTANTNUM  shift, and go to state 49


state 88

   45 ariexp: ID LB vlist . RB

    RB  shift, and go to state 104


state 89

   46 vlist: value .
   47      | value . COMMA value

    COMMA  shift, and go to state 105

    $default  reduce using rule 46 (vlist)


state 90

   40 ariexplist: LB ariexplist RB .

    $default  reduce using rule 40 (ariexplist)


state 91

   38 ariexplist: ariexplist ariop LB . ariexplist RB

    ID           shift, and go to state 43
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    ariexplist  go to state 106
    ariexp      go to state 45
    value       go to state 33


state 92

   37 ariexplist: ariexplist ariop ariexp .

    $default  reduce using rule 37 (ariexplist)


state 93

   54 conexp: ariexp relop ariexp .

    $default  reduce using rule 54 (conexp)


state 94

   53 conexplist: conexp logop M . conexp

    ID           shift, and go to state 43
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    ariexp  go to state 107
    value   go to state 33
    conexp  go to state 108


state 95

   21 codeitem: RETURN ariexplist . SEMI
   37 ariexplist: ariexplist . ariop ariexp
   38           | ariexplist . ariop LB ariexplist RB

    SEMI    shift, and go to state 109
    MINUS   shift, and go to state 50
    ADD     shift, and go to state 51
    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    ariop  go to state 54


state 96

   22 codeitem: RETURN conexplist . SEMI

    SEMI  shift, and go to state 110


state 97

   32 iterstat: FOR LB . decl expstat exp RB stat

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    decl  go to state 111
    type  go to state 80


state 98

   31 iterstat: WHILE LB . exp RB stat

    ID           shift, and go to state 24
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    exp         go to state 112
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 99

   29 selstat: IF LB . exp RB stat ELSE stat
   30        | IF LB . exp RB stat

    ID           shift, and go to state 24
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    exp         go to state 113
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 100

   16 body: LBB codelist RBB .

    $default  reduce using rule 16 (body)


state 101

   18 codelist: codelist codeitem .

    $default  reduce using rule 18 (codelist)


state 102

   28 expstat: exp SEMI .

    $default  reduce using rule 28 (expstat)


state 103

   10 decl: type ID . SEMI
   36 assexp: ID . assop exp

    SEMI    shift, and go to state 16
    ASSIGN  shift, and go to state 17

    assop  go to state 18


state 104

   45 ariexp: ID LB vlist RB .

    $default  reduce using rule 45 (ariexp)


state 105

   47 vlist: value COMMA . value

    ID           shift, and go to state 84
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 86
    ADD          shift, and go to state 87

    value  go to state 114


state 106

   37 ariexplist: ariexplist . ariop ariexp
   38           | ariexplist . ariop LB ariexplist RB
   38           | ariexplist ariop LB ariexplist . RB

    RB      shift, and go to state 115
    MINUS   shift, and go to state 50
    ADD     shift, and go to state 51
    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    ariop  go to state 54


state 107

   54 conexp: ariexp . relop ariexp

    EQUAL         shift, and go to state 55
    NOTEQUAL      shift, and go to state 56
    LESSEQUAL     shift, and go to state 57
    GREATEREQUAL  shift, and go to state 58
    LESS          shift, and go to state 59
    GREATER       shift, and go to state 60

    relop  go to state 61


state 108

   53 conexplist: conexp logop M conexp .

    $default  reduce using rule 53 (conexplist)


state 109

   21 codeitem: RETURN ariexplist SEMI .

    $default  reduce using rule 21 (codeitem)


state 110

   22 codeitem: RETURN conexplist SEMI .

    $default  reduce using rule 22 (codeitem)


state 111

   32 iterstat: FOR LB decl . expstat exp RB stat

    ID           shift, and go to state 24
    LB           shift, and go to state 25
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    expstat     go to state 116
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 112

   31 iterstat: WHILE LB exp . RB stat

    RB  shift, and go to state 117


state 113

   29 selstat: IF LB exp . RB stat ELSE stat
   30        | IF LB exp . RB stat

    RB  shift, and go to state 118


state 114

   47 vlist: value COMMA value .

    $default  reduce using rule 47 (vlist)


state 115

   38 ariexplist: ariexplist ariop LB ariexplist RB .

    $default  reduce using rule 38 (ariexplist)


state 116

   32 iterstat: FOR LB decl expstat . exp RB stat

    ID           shift, and go to state 24
    LB           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    exp         go to state 119
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 117

   31 iterstat: WHILE LB exp RB . stat

    ID           shift, and go to state 24
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    IF           shift, and go to state 68
    LB           shift, and go to state 25
    LBB          shift, and go to state 36
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    body        go to state 72
    stat        go to state 120
    expstat     go to state 76
    selstat     go to state 77
    iterstat    go to state 78
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 118

   29 selstat: IF LB exp RB . stat ELSE stat
   30        | IF LB exp RB . stat

    ID           shift, and go to state 24
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    IF           shift, and go to state 68
    LB           shift, and go to state 25
    LBB          shift, and go to state 36
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    body        go to state 72
    stat        go to state 121
    expstat     go to state 76
    selstat     go to state 77
    iterstat    go to state 78
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 119

   32 iterstat: FOR LB decl expstat exp . RB stat

    RB  shift, and go to state 122


state 120

   31 iterstat: WHILE LB exp RB stat .

    $default  reduce using rule 31 (iterstat)


state 121

   29 selstat: IF LB exp RB stat . ELSE stat
   30        | IF LB exp RB stat .

    ELSE  shift, and go to state 123

    ELSE      [reduce using rule 30 (selstat)]
    $default  reduce using rule 30 (selstat)


state 122

   32 iterstat: FOR LB decl expstat exp RB . stat

    ID           shift, and go to state 24
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    IF           shift, and go to state 68
    LB           shift, and go to state 25
    LBB          shift, and go to state 36
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    body        go to state 72
    stat        go to state 124
    expstat     go to state 76
    selstat     go to state 77
    iterstat    go to state 78
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 123

   29 selstat: IF LB exp RB stat ELSE . stat

    ID           shift, and go to state 24
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    IF           shift, and go to state 68
    LB           shift, and go to state 25
    LBB          shift, and go to state 36
    SEMI         shift, and go to state 70
    CONSTANTNUM  shift, and go to state 26
    MINUS        shift, and go to state 27
    ADD          shift, and go to state 28

    body        go to state 72
    stat        go to state 125
    expstat     go to state 76
    selstat     go to state 77
    iterstat    go to state 78
    exp         go to state 79
    assexp      go to state 30
    ariexplist  go to state 31
    ariexp      go to state 32
    value       go to state 33
    conexplist  go to state 34
    conexp      go to state 35


state 124

   32 iterstat: FOR LB decl expstat exp RB stat .

    $default  reduce using rule 32 (iterstat)


state 125

   29 selstat: IF LB exp RB stat ELSE stat .

    $default  reduce using rule 29 (selstat)
