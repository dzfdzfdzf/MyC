Terminals unused in grammar

   BREAK
   CASE
   CONST
   SWITCH
   DEFAULT
   DOT
   COLON


State 121 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: Cprogram

    2 Cprogram: code
    3         | Cprogram code

    4 code: function
    5     | decl

    6 function: type ID LB plist RB body
    7         | type ID LB RB body
    8         | type ID LB plist RB SEMI
    9         | type ID LB RB SEMI

   10 decl: type declarator SEMI
   11     | type assexp SEMI

   12 plist: pdecl
   13      | plist COMMA pdecl

   14 pdecl: type declarator

   15 declarator: ID

   16 body: LBB RBB
   17     | LBB codelist RBB

   18 codelist: codeitem
   19         | codelist codeitem

   20 codeitem: decl
   21         | stat
   22         | RETURN ariexplist SEMI
   23         | RETURN conexplist SEMI

   24 stat: body
   25     | expstat
   26     | selstat
   27     | iterstat

   28 expstat: SEMI
   29        | exp SEMI

   30 selstat: IF LB exp RB stat
   31        | IF LB exp RB stat ELSE stat

   32 iterstat: WHILE LB exp RB stat
   33         | FOR LB decl expstat exp RB stat

   34 exp: conexplist
   35    | assexp
   36    | ariexplist

   37 assexp: declarator assop exp

   38 ariexplist: ariexplist ariop ariexp
   39           | ariexplist ariop LB ariexplist RB
   40           | ariexp
   41           | LB ariexplist RB

   42 ariexp: value
   43       | ADD ID
   44       | MINUS ID
   45       | ID LB RB
   46       | ID LB vlist RB

   47 vlist: value
   48      | value COMMA value

   49 value: CONSTANTNUM
   50      | ADD CONSTANTNUM
   51      | MINUS CONSTANTNUM
   52      | declarator

   53 conexplist: conexp
   54           | conexp logop conexp

   55 conexp: ariexp relop ariexp

   56 ariop: ADD
   57      | MINUS
   58      | TIMES
   59      | DIVIDE

   60 logop: DAND
   61      | DOR

   62 relop: EQUAL
   63      | LESS
   64      | GREATER
   65      | NOTEQUAL
   66      | LESSEQUAL
   67      | GREATEREQUAL

   68 assop: ASSIGN

   69 type: VOID
   70     | INT
   71     | FLOAT
   72     | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 8 9 15 43 44 45 46
INT (259) 70
BREAK (260)
CASE (261)
DOUBLE (262) 72
CONST (263)
FLOAT (264) 71
VOID (265) 69
RETURN (266) 22 23
FOR (267) 33
WHILE (268) 32
IF (269) 30 31
ELSE (270) 31
SWITCH (271)
DEFAULT (272)
LB (273) 6 7 8 9 30 31 32 33 39 41 45 46
RB (274) 6 7 8 9 30 31 32 33 39 41 45 46
LBB (275) 16 17
RBB (276) 16 17
DOT (277)
SEMI (278) 8 9 10 11 22 23 28 29
COLON (279)
COMMA (280) 13 48
CONSTANTNUM (281) 49 50 51
ASSIGN (282) 68
DOR (283) 61
DAND (284) 60
EQUAL (285) 62
NOTEQUAL (286) 65
LESSEQUAL (287) 66
GREATEREQUAL (288) 67
LESS (289) 63
GREATER (290) 64
MINUS (291) 44 51 57
ADD (292) 43 50 56
DIVIDE (293) 59
TIMES (294) 58


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
START (41)
    on left: 1, on right: 0
Cprogram (42)
    on left: 2 3, on right: 1 3
code (43)
    on left: 4 5, on right: 2 3
function (44)
    on left: 6 7 8 9, on right: 4
decl (45)
    on left: 10 11, on right: 5 20 33
plist (46)
    on left: 12 13, on right: 6 8 13
pdecl (47)
    on left: 14, on right: 12 13
declarator (48)
    on left: 15, on right: 10 14 37 52
body (49)
    on left: 16 17, on right: 6 7 24
codelist (50)
    on left: 18 19, on right: 17 19
codeitem (51)
    on left: 20 21 22 23, on right: 18 19
stat (52)
    on left: 24 25 26 27, on right: 21 30 31 32 33
expstat (53)
    on left: 28 29, on right: 25 33
selstat (54)
    on left: 30 31, on right: 26
iterstat (55)
    on left: 32 33, on right: 27
exp (56)
    on left: 34 35 36, on right: 29 30 31 32 33 37
assexp (57)
    on left: 37, on right: 11 35
ariexplist (58)
    on left: 38 39 40 41, on right: 22 36 38 39 41
ariexp (59)
    on left: 42 43 44 45 46, on right: 38 40 55
vlist (60)
    on left: 47 48, on right: 46
value (61)
    on left: 49 50 51 52, on right: 42 47 48
conexplist (62)
    on left: 53 54, on right: 23 34
conexp (63)
    on left: 55, on right: 53 54
ariop (64)
    on left: 56 57 58 59, on right: 38 39
logop (65)
    on left: 60 61, on right: 54
relop (66)
    on left: 62 63 64 65 66 67, on right: 55
assop (67)
    on left: 68, on right: 37
type (68)
    on left: 69 70 71 72, on right: 6 7 8 9 10 11 14


state 0

    0 $accept: . START $end

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    START     go to state 5
    Cprogram  go to state 6
    code      go to state 7
    function  go to state 8
    decl      go to state 9
    type      go to state 10


state 1

   70 type: INT .

    $default  reduce using rule 70 (type)


state 2

   72 type: DOUBLE .

    $default  reduce using rule 72 (type)


state 3

   71 type: FLOAT .

    $default  reduce using rule 71 (type)


state 4

   69 type: VOID .

    $default  reduce using rule 69 (type)


state 5

    0 $accept: START . $end

    $end  shift, and go to state 11


state 6

    1 START: Cprogram .
    3 Cprogram: Cprogram . code

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    $default  reduce using rule 1 (START)

    code      go to state 12
    function  go to state 8
    decl      go to state 9
    type      go to state 10


state 7

    2 Cprogram: code .

    $default  reduce using rule 2 (Cprogram)


state 8

    4 code: function .

    $default  reduce using rule 4 (code)


state 9

    5 code: decl .

    $default  reduce using rule 5 (code)


state 10

    6 function: type . ID LB plist RB body
    7         | type . ID LB RB body
    8         | type . ID LB plist RB SEMI
    9         | type . ID LB RB SEMI
   10 decl: type . declarator SEMI
   11     | type . assexp SEMI

    ID  shift, and go to state 13

    declarator  go to state 14
    assexp      go to state 15


state 11

    0 $accept: START $end .

    $default  accept


state 12

    3 Cprogram: Cprogram code .

    $default  reduce using rule 3 (Cprogram)


state 13

    6 function: type ID . LB plist RB body
    7         | type ID . LB RB body
    8         | type ID . LB plist RB SEMI
    9         | type ID . LB RB SEMI
   15 declarator: ID .

    LB  shift, and go to state 16

    $default  reduce using rule 15 (declarator)


state 14

   10 decl: type declarator . SEMI
   37 assexp: declarator . assop exp

    SEMI    shift, and go to state 17
    ASSIGN  shift, and go to state 18

    assop  go to state 19


state 15

   11 decl: type assexp . SEMI

    SEMI  shift, and go to state 20


state 16

    6 function: type ID LB . plist RB body
    7         | type ID LB . RB body
    8         | type ID LB . plist RB SEMI
    9         | type ID LB . RB SEMI

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    RB      shift, and go to state 21

    plist  go to state 22
    pdecl  go to state 23
    type   go to state 24


state 17

   10 decl: type declarator SEMI .

    $default  reduce using rule 10 (decl)


state 18

   68 assop: ASSIGN .

    $default  reduce using rule 68 (assop)


state 19

   37 assexp: declarator assop . exp

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    exp         go to state 31
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 20

   11 decl: type assexp SEMI .

    $default  reduce using rule 11 (decl)


state 21

    7 function: type ID LB RB . body
    9         | type ID LB RB . SEMI

    LBB   shift, and go to state 38
    SEMI  shift, and go to state 39

    body  go to state 40


state 22

    6 function: type ID LB plist . RB body
    8         | type ID LB plist . RB SEMI
   13 plist: plist . COMMA pdecl

    RB     shift, and go to state 41
    COMMA  shift, and go to state 42


state 23

   12 plist: pdecl .

    $default  reduce using rule 12 (plist)


state 24

   14 pdecl: type . declarator

    ID  shift, and go to state 43

    declarator  go to state 44


state 25

   15 declarator: ID .
   45 ariexp: ID . LB RB
   46       | ID . LB vlist RB

    LB  shift, and go to state 45

    $default  reduce using rule 15 (declarator)


state 26

   41 ariexplist: LB . ariexplist RB

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 46
    ariexplist  go to state 47
    ariexp      go to state 48
    value       go to state 35


state 27

   49 value: CONSTANTNUM .

    $default  reduce using rule 49 (value)


state 28

   44 ariexp: MINUS . ID
   51 value: MINUS . CONSTANTNUM

    ID           shift, and go to state 49
    CONSTANTNUM  shift, and go to state 50


state 29

   43 ariexp: ADD . ID
   50 value: ADD . CONSTANTNUM

    ID           shift, and go to state 51
    CONSTANTNUM  shift, and go to state 52


state 30

   37 assexp: declarator . assop exp
   52 value: declarator .

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 52 (value)

    assop  go to state 19


state 31

   37 assexp: declarator assop exp .

    $default  reduce using rule 37 (assexp)


state 32

   35 exp: assexp .

    $default  reduce using rule 35 (exp)


state 33

   36 exp: ariexplist .
   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB

    MINUS   shift, and go to state 53
    ADD     shift, and go to state 54
    DIVIDE  shift, and go to state 55
    TIMES   shift, and go to state 56

    $default  reduce using rule 36 (exp)

    ariop  go to state 57


state 34

   40 ariexplist: ariexp .
   55 conexp: ariexp . relop ariexp

    EQUAL         shift, and go to state 58
    NOTEQUAL      shift, and go to state 59
    LESSEQUAL     shift, and go to state 60
    GREATEREQUAL  shift, and go to state 61
    LESS          shift, and go to state 62
    GREATER       shift, and go to state 63

    $default  reduce using rule 40 (ariexplist)

    relop  go to state 64


state 35

   42 ariexp: value .

    $default  reduce using rule 42 (ariexp)


state 36

   34 exp: conexplist .

    $default  reduce using rule 34 (exp)


state 37

   53 conexplist: conexp .
   54           | conexp . logop conexp

    DOR   shift, and go to state 65
    DAND  shift, and go to state 66

    $default  reduce using rule 53 (conexplist)

    logop  go to state 67


state 38

   16 body: LBB . RBB
   17     | LBB . codelist RBB

    ID           shift, and go to state 25
    INT          shift, and go to state 1
    DOUBLE       shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    LB           shift, and go to state 26
    LBB          shift, and go to state 38
    RBB          shift, and go to state 72
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    decl        go to state 74
    declarator  go to state 30
    body        go to state 75
    codelist    go to state 76
    codeitem    go to state 77
    stat        go to state 78
    expstat     go to state 79
    selstat     go to state 80
    iterstat    go to state 81
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37
    type        go to state 83


state 39

    9 function: type ID LB RB SEMI .

    $default  reduce using rule 9 (function)


state 40

    7 function: type ID LB RB body .

    $default  reduce using rule 7 (function)


state 41

    6 function: type ID LB plist RB . body
    8         | type ID LB plist RB . SEMI

    LBB   shift, and go to state 38
    SEMI  shift, and go to state 84

    body  go to state 85


state 42

   13 plist: plist COMMA . pdecl

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    pdecl  go to state 86
    type   go to state 24


state 43

   15 declarator: ID .

    $default  reduce using rule 15 (declarator)


state 44

   14 pdecl: type declarator .

    $default  reduce using rule 14 (pdecl)


state 45

   45 ariexp: ID LB . RB
   46       | ID LB . vlist RB

    ID           shift, and go to state 43
    RB           shift, and go to state 87
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 88
    ADD          shift, and go to state 89

    declarator  go to state 46
    vlist       go to state 90
    value       go to state 91


state 46

   52 value: declarator .

    $default  reduce using rule 52 (value)


state 47

   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB
   41           | LB ariexplist . RB

    RB      shift, and go to state 92
    MINUS   shift, and go to state 53
    ADD     shift, and go to state 54
    DIVIDE  shift, and go to state 55
    TIMES   shift, and go to state 56

    ariop  go to state 57


state 48

   40 ariexplist: ariexp .

    $default  reduce using rule 40 (ariexplist)


state 49

   44 ariexp: MINUS ID .

    $default  reduce using rule 44 (ariexp)


state 50

   51 value: MINUS CONSTANTNUM .

    $default  reduce using rule 51 (value)


state 51

   43 ariexp: ADD ID .

    $default  reduce using rule 43 (ariexp)


state 52

   50 value: ADD CONSTANTNUM .

    $default  reduce using rule 50 (value)


state 53

   57 ariop: MINUS .

    $default  reduce using rule 57 (ariop)


state 54

   56 ariop: ADD .

    $default  reduce using rule 56 (ariop)


state 55

   59 ariop: DIVIDE .

    $default  reduce using rule 59 (ariop)


state 56

   58 ariop: TIMES .

    $default  reduce using rule 58 (ariop)


state 57

   38 ariexplist: ariexplist ariop . ariexp
   39           | ariexplist ariop . LB ariexplist RB

    ID           shift, and go to state 25
    LB           shift, and go to state 93
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 46
    ariexp      go to state 94
    value       go to state 35


state 58

   62 relop: EQUAL .

    $default  reduce using rule 62 (relop)


state 59

   65 relop: NOTEQUAL .

    $default  reduce using rule 65 (relop)


state 60

   66 relop: LESSEQUAL .

    $default  reduce using rule 66 (relop)


state 61

   67 relop: GREATEREQUAL .

    $default  reduce using rule 67 (relop)


state 62

   63 relop: LESS .

    $default  reduce using rule 63 (relop)


state 63

   64 relop: GREATER .

    $default  reduce using rule 64 (relop)


state 64

   55 conexp: ariexp relop . ariexp

    ID           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 46
    ariexp      go to state 95
    value       go to state 35


state 65

   61 logop: DOR .

    $default  reduce using rule 61 (logop)


state 66

   60 logop: DAND .

    $default  reduce using rule 60 (logop)


state 67

   54 conexplist: conexp logop . conexp

    ID           shift, and go to state 25
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 46
    ariexp      go to state 96
    value       go to state 35
    conexp      go to state 97


state 68

   22 codeitem: RETURN . ariexplist SEMI
   23         | RETURN . conexplist SEMI

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 46
    ariexplist  go to state 98
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 99
    conexp      go to state 37


state 69

   33 iterstat: FOR . LB decl expstat exp RB stat

    LB  shift, and go to state 100


state 70

   32 iterstat: WHILE . LB exp RB stat

    LB  shift, and go to state 101


state 71

   30 selstat: IF . LB exp RB stat
   31        | IF . LB exp RB stat ELSE stat

    LB  shift, and go to state 102


state 72

   16 body: LBB RBB .

    $default  reduce using rule 16 (body)


state 73

   28 expstat: SEMI .

    $default  reduce using rule 28 (expstat)


state 74

   20 codeitem: decl .

    $default  reduce using rule 20 (codeitem)


state 75

   24 stat: body .

    $default  reduce using rule 24 (stat)


state 76

   17 body: LBB codelist . RBB
   19 codelist: codelist . codeitem

    ID           shift, and go to state 25
    INT          shift, and go to state 1
    DOUBLE       shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    RETURN       shift, and go to state 68
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    LB           shift, and go to state 26
    LBB          shift, and go to state 38
    RBB          shift, and go to state 103
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    decl        go to state 74
    declarator  go to state 30
    body        go to state 75
    codeitem    go to state 104
    stat        go to state 78
    expstat     go to state 79
    selstat     go to state 80
    iterstat    go to state 81
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37
    type        go to state 83


state 77

   18 codelist: codeitem .

    $default  reduce using rule 18 (codelist)


state 78

   21 codeitem: stat .

    $default  reduce using rule 21 (codeitem)


state 79

   25 stat: expstat .

    $default  reduce using rule 25 (stat)


state 80

   26 stat: selstat .

    $default  reduce using rule 26 (stat)


state 81

   27 stat: iterstat .

    $default  reduce using rule 27 (stat)


state 82

   29 expstat: exp . SEMI

    SEMI  shift, and go to state 105


state 83

   10 decl: type . declarator SEMI
   11     | type . assexp SEMI

    ID  shift, and go to state 43

    declarator  go to state 14
    assexp      go to state 15


state 84

    8 function: type ID LB plist RB SEMI .

    $default  reduce using rule 8 (function)


state 85

    6 function: type ID LB plist RB body .

    $default  reduce using rule 6 (function)


state 86

   13 plist: plist COMMA pdecl .

    $default  reduce using rule 13 (plist)


state 87

   45 ariexp: ID LB RB .

    $default  reduce using rule 45 (ariexp)


state 88

   51 value: MINUS . CONSTANTNUM

    CONSTANTNUM  shift, and go to state 50


state 89

   50 value: ADD . CONSTANTNUM

    CONSTANTNUM  shift, and go to state 52


state 90

   46 ariexp: ID LB vlist . RB

    RB  shift, and go to state 106


state 91

   47 vlist: value .
   48      | value . COMMA value

    COMMA  shift, and go to state 107

    $default  reduce using rule 47 (vlist)


state 92

   41 ariexplist: LB ariexplist RB .

    $default  reduce using rule 41 (ariexplist)


state 93

   39 ariexplist: ariexplist ariop LB . ariexplist RB

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 46
    ariexplist  go to state 108
    ariexp      go to state 48
    value       go to state 35


state 94

   38 ariexplist: ariexplist ariop ariexp .

    $default  reduce using rule 38 (ariexplist)


state 95

   55 conexp: ariexp relop ariexp .

    $default  reduce using rule 55 (conexp)


state 96

   55 conexp: ariexp . relop ariexp

    EQUAL         shift, and go to state 58
    NOTEQUAL      shift, and go to state 59
    LESSEQUAL     shift, and go to state 60
    GREATEREQUAL  shift, and go to state 61
    LESS          shift, and go to state 62
    GREATER       shift, and go to state 63

    relop  go to state 64


state 97

   54 conexplist: conexp logop conexp .

    $default  reduce using rule 54 (conexplist)


state 98

   22 codeitem: RETURN ariexplist . SEMI
   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB

    SEMI    shift, and go to state 109
    MINUS   shift, and go to state 53
    ADD     shift, and go to state 54
    DIVIDE  shift, and go to state 55
    TIMES   shift, and go to state 56

    ariop  go to state 57


state 99

   23 codeitem: RETURN conexplist . SEMI

    SEMI  shift, and go to state 110


state 100

   33 iterstat: FOR LB . decl expstat exp RB stat

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    decl  go to state 111
    type  go to state 83


state 101

   32 iterstat: WHILE LB . exp RB stat

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    exp         go to state 112
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 102

   30 selstat: IF LB . exp RB stat
   31        | IF LB . exp RB stat ELSE stat

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    exp         go to state 113
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 103

   17 body: LBB codelist RBB .

    $default  reduce using rule 17 (body)


state 104

   19 codelist: codelist codeitem .

    $default  reduce using rule 19 (codelist)


state 105

   29 expstat: exp SEMI .

    $default  reduce using rule 29 (expstat)


state 106

   46 ariexp: ID LB vlist RB .

    $default  reduce using rule 46 (ariexp)


state 107

   48 vlist: value COMMA . value

    ID           shift, and go to state 43
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 88
    ADD          shift, and go to state 89

    declarator  go to state 46
    value       go to state 114


state 108

   38 ariexplist: ariexplist . ariop ariexp
   39           | ariexplist . ariop LB ariexplist RB
   39           | ariexplist ariop LB ariexplist . RB

    RB      shift, and go to state 115
    MINUS   shift, and go to state 53
    ADD     shift, and go to state 54
    DIVIDE  shift, and go to state 55
    TIMES   shift, and go to state 56

    ariop  go to state 57


state 109

   22 codeitem: RETURN ariexplist SEMI .

    $default  reduce using rule 22 (codeitem)


state 110

   23 codeitem: RETURN conexplist SEMI .

    $default  reduce using rule 23 (codeitem)


state 111

   33 iterstat: FOR LB decl . expstat exp RB stat

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    expstat     go to state 116
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 112

   32 iterstat: WHILE LB exp . RB stat

    RB  shift, and go to state 117


state 113

   30 selstat: IF LB exp . RB stat
   31        | IF LB exp . RB stat ELSE stat

    RB  shift, and go to state 118


state 114

   48 vlist: value COMMA value .

    $default  reduce using rule 48 (vlist)


state 115

   39 ariexplist: ariexplist ariop LB ariexplist RB .

    $default  reduce using rule 39 (ariexplist)


state 116

   33 iterstat: FOR LB decl expstat . exp RB stat

    ID           shift, and go to state 25
    LB           shift, and go to state 26
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    exp         go to state 119
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 117

   32 iterstat: WHILE LB exp RB . stat

    ID           shift, and go to state 25
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    LB           shift, and go to state 26
    LBB          shift, and go to state 38
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    body        go to state 75
    stat        go to state 120
    expstat     go to state 79
    selstat     go to state 80
    iterstat    go to state 81
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 118

   30 selstat: IF LB exp RB . stat
   31        | IF LB exp RB . stat ELSE stat

    ID           shift, and go to state 25
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    LB           shift, and go to state 26
    LBB          shift, and go to state 38
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    body        go to state 75
    stat        go to state 121
    expstat     go to state 79
    selstat     go to state 80
    iterstat    go to state 81
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 119

   33 iterstat: FOR LB decl expstat exp . RB stat

    RB  shift, and go to state 122


state 120

   32 iterstat: WHILE LB exp RB stat .

    $default  reduce using rule 32 (iterstat)


state 121

   30 selstat: IF LB exp RB stat .
   31        | IF LB exp RB stat . ELSE stat

    ELSE  shift, and go to state 123

    ELSE      [reduce using rule 30 (selstat)]
    $default  reduce using rule 30 (selstat)


state 122

   33 iterstat: FOR LB decl expstat exp RB . stat

    ID           shift, and go to state 25
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    LB           shift, and go to state 26
    LBB          shift, and go to state 38
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    body        go to state 75
    stat        go to state 124
    expstat     go to state 79
    selstat     go to state 80
    iterstat    go to state 81
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 123

   31 selstat: IF LB exp RB stat ELSE . stat

    ID           shift, and go to state 25
    FOR          shift, and go to state 69
    WHILE        shift, and go to state 70
    IF           shift, and go to state 71
    LB           shift, and go to state 26
    LBB          shift, and go to state 38
    SEMI         shift, and go to state 73
    CONSTANTNUM  shift, and go to state 27
    MINUS        shift, and go to state 28
    ADD          shift, and go to state 29

    declarator  go to state 30
    body        go to state 75
    stat        go to state 125
    expstat     go to state 79
    selstat     go to state 80
    iterstat    go to state 81
    exp         go to state 82
    assexp      go to state 32
    ariexplist  go to state 33
    ariexp      go to state 34
    value       go to state 35
    conexplist  go to state 36
    conexp      go to state 37


state 124

   33 iterstat: FOR LB decl expstat exp RB stat .

    $default  reduce using rule 33 (iterstat)


state 125

   31 selstat: IF LB exp RB stat ELSE stat .

    $default  reduce using rule 31 (selstat)
